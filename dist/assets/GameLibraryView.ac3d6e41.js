import{b as y,o as l,c as g,a as s,u,t as h,d as f,w as x,e as b,F as C,r as N,f as p,g as w}from"./index.9eab1816.js";const S={class:"gamecard"},v=["src","alt"],G={props:{name:String,imageUrl:String},setup(e){const t=e,a=y(()=>t.name?`${t.name} board game box photo`:"Board game box art");return(r,o)=>(l(),g("figure",S,[s("img",{class:"gamecard_image",src:e.imageUrl,alt:u(a),loading:"lazy"},null,8,v),s("figcaption",null,h(e.name),1)]))}},L=f({id:"GameLibraryStore",state:()=>({username:"townsean",games:[],gameDetails:{}}),getters:{count:e=>e.games.length,roundedCount:e=>Math.round(e.games.length/10)*10},actions:{async loadGameLibrary(){const e=`https://boardgamegeek.com/xmlapi2/collection?username=${this.username}&own=1`;await fetch(e).then(t=>t.text()).then(t=>{const r=new DOMParser().parseFromString(t,"text/xml"),o=Array.from(r.getElementsByTagName("item"));this.games=o.map(i=>{let m=Array.from(i.children).find(d=>d.nodeName=="name").textContent,c=Array.from(i.children).find(d=>d.nodeName=="image").textContent;return{name:m,imageUrl:c}})})},async getGameDetails(e){if(this.gameDetails[e])return this.gameDetails[e];const t=`https://boardgamegeek.com/xmlapi2/thing?id=${e}`;await fetch(t).then(a=>a.text()).then(a=>{const o=new DOMParser().parseFromString(a,"text/xml"),n=Array.from(o.getElementsByName("item"))[0];if(!n)return;const _=Array.from(n.children).find(c=>c.nodeName=="description").textContent;console.log(_)})}}});const U={class:"game-library-view"},A=s("h1",null,"Game Library",-1),B=p("Choose from over "),D=p(" board games and expansions!"),k={class:"library-section"},F={async setup(e){let t,a;const r=L();return r.count||([t,a]=x(()=>r.loadGameLibrary()),await t,a()),b(()=>{}),(o,i)=>(l(),g("main",U,[A,s("p",null,[B,s("strong",null,h(u(r).roundedCount)+"+",1),D]),s("section",k,[(l(!0),g(C,null,N(u(r).games,(n,m)=>(l(),w(G,{key:m,name:n.name,imageUrl:n.imageUrl},null,8,["name","imageUrl"]))),128))])]))}};export{F as default};
